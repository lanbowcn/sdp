import numpy as np
from sklearn.linear_model import LinearRegression

def readprojects(projects):
    for project in projects:
        foldpath = "../dataset"
        my_matrix = np.loadtxt(open(foldpath+'/'+project),delimiter=",",skiprows=1)
    return my_matrix

def divedeTosubsets(data,folds,seed):
    # seed使得结果可复现，打乱现有顺序
    np.random.seed(seed)
    np.random.shuffle(data)
    #数据集切分(array_split不等量分割# )
    sub=np.array_split(data,folds)
    return sub

projects=['ivy-1.4.csv']
data = readprojects(projects)

# data = np.arange(18).reshape(9, 2)
# print(data)
k=10
run=1
totalruns = 1
seed=run
for run in range(totalruns):
    sub = divedeTosubsets(data, k, seed)
    for i in range(1):
        Yest = sub[i]
        train= np.empty(shape=[0,22],dtype=float)
        #print(Ytrain)
        for j in range(k):
            if(j!=i):
                train=np.vstack((train,sub[j]))
        train[:,21]=train[:,21]/train[:,11]
        print(train[:,21].shape)
        model = LinearRegression(fit_intercept=True,normalize=False,copy_X=True,n_jobs=1)
        xcol = [0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20]
        model.fit(train[:,xcol],train[:,21])
        a = model.predict(Yest[:,xcol])
        print(a)
